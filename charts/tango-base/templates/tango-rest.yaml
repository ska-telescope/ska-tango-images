{{ if .Values.tangorest.enabled }}
{{ $default_tango_host := printf "%s-%s" "databaseds-tango-base-" .Release.Name }}
{{ $tango_host := tpl (coalesce .Values.global.tango_host .Values.tango_host $default_tango_host | toString) . }}
{{ $tries := coalesce  .Values.global.tries 10}}
{{ $sleep := coalesce  .Values.global.sleep 5}}
---

apiVersion: v1
kind: Service
metadata:
  name: {{ template "tango-base.name" . }}-{{ .Values.tangorest.component }}
  namespace: {{ .Release.Namespace }}
  labels:
{{ toYaml (coalesce .Values.global.labels .Values.labels "label:none") | indent 4 }}
    component: {{ .Values.tangorest.component }}
    function: {{ .Values.tangorest.function }}
    domain: {{ .Values.tangorest.domain }}
    intent: {{ .Values.tangorest.intent }}
spec:
  type: NodePort
  ports:
  - name: rest
    port: 8080
  selector:
{{ toYaml (coalesce .Values.global.labels .Values.labels "label:none") | indent 4 }}
    component: {{ .Values.tangorest.component }}
    function: {{ .Values.tangorest.function }}
    domain: {{ .Values.tangorest.domain }}
    intent: {{ .Values.tangorest.intent }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "tango-base.name" . }}-{{ .Values.tangorest.component }}
  namespace: {{ .Release.Namespace }}
  labels:
{{ toYaml (coalesce .Values.global.labels .Values.labels "label:none") | indent 4 }}
    component: {{ .Values.tangorest.component }}
    function: {{ .Values.tangorest.function }}
    domain: {{ .Values.tangorest.domain }}
    intent: {{ .Values.tangorest.intent }}
  annotations:
{{ toYaml (coalesce .Values.global.annotations .Values.annotations "annotations:none") | indent 4 }}
spec:
  selector:
    matchLabels:
{{ toYaml (coalesce .Values.global.labels .Values.labels "label:none") | indent 6 }}
      component: {{ .Values.tangorest.component }}
      function: {{ .Values.tangorest.function }}
      domain: {{ .Values.tangorest.domain }}
      intent: {{ .Values.tangorest.intent }}
  replicas: {{ .Values.tangorest.replicas }}
  template:
    metadata:
      labels:
{{ toYaml (coalesce .Values.global.labels .Values.labels "label:none") | indent 8 }}
        component: {{ .Values.tangorest.component }}
        function: {{ .Values.tangorest.function }}
        domain: {{ .Values.tangorest.domain }}
        intent: {{ .Values.tangorest.intent }}
      annotations:
{{ toYaml (coalesce .Values.global.annotations .Values.annotations "annotations:none") | indent 8 }}
    spec:
      {{- if .Values.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.pullSecrets }}
        - name: {{ . }}
      {{- end}}
      {{- end }}
      initContainers:
      - name: check-dependencies-0
        image: "{{ .Values.tangorest.image.registry }}/{{ .Values.tangorest.image.image }}:{{ .Values.tangorest.image.tag }}"
        imagePullPolicy: {{ .Values.tangorest.image.pullPolicy }}
        command:
          - retry
          - --tries={{$tries}} --sleep={{$sleep}}
          - --
          - tango_admin
          - --check-device
          - sys/database/2
        env:
        - name: TANGO_HOST
          value: {{ $tango_host }}
      - name: init-0
        image: "{{ .Values.tangorest.image.registry }}/{{ .Values.tangorest.image.image }}:{{ .Values.tangorest.image.tag }}"
        imagePullPolicy: {{ .Values.tangorest.image.pullPolicy }}
        command:
          - /bin/bash
        args:
          - "-c"
          - /usr/local/bin/tango_register_device.sh TangoRestServer/$(hostname) TangoRestServer $(hostname)/rest/0
        env:
        - name: TANGO_HOST
          value: {{ $tango_host }}
      - name: init-1
        image: "{{ .Values.tangorest.image.registry }}/{{ .Values.tangorest.image.image }}:{{ .Values.tangorest.image.tag }}"
        imagePullPolicy: {{ .Values.tangorest.image.pullPolicy }}
        command:
          - /bin/bash
        args:
          - "-c"
          - /usr/local/bin/tango_admin --add-property $(hostname)/rest/0 TANGO_DB tango://{{ $tango_host }}/sys/database/2
        env:
        - name: TANGO_HOST
          value: {{ $tango_host }}
      - name: init-2
        image: "{{ .Values.tangorest.image.registry }}/{{ .Values.tangorest.image.image }}:{{ .Values.tangorest.image.tag }}"
        imagePullPolicy: {{ .Values.tangorest.image.pullPolicy }}
        command:
          - /bin/bash
        args:
          - "-c"
          - /usr/local/bin/tango_admin --add-property $(hostname)/rest/0 TOMCAT_PORT 8080
        env:
        - name: TANGO_HOST
          value: {{ $tango_host }}
      - name: init-3
        image: "{{ .Values.tangorest.image.registry }}/{{ .Values.tangorest.image.image }}:{{ .Values.tangorest.image.tag }}"
        imagePullPolicy: {{ .Values.tangorest.image.pullPolicy }}
        command:
          - /bin/bash
        args:
          - "-c"
          - /usr/local/bin/tango_admin --add-property $(hostname)/rest/0 TOMCAT_AUTH_METHOD plain
        env:
        - name: TANGO_HOST
          value: {{ $tango_host }}
      containers:
      - name: tango-rest
        image: "{{ .Values.tangorest.image.registry }}/{{ .Values.tangorest.image.image }}:{{ .Values.tangorest.image.tag }}"
        imagePullPolicy: {{ .Values.tangorest.image.pullPolicy }}
        command:
          - /bin/bash
        args:
          - "-c"
          - /usr/bin/java -jar $JAVA_OPTS /usr/local/lib/tango/mtangorest.jar $(hostname)
        env:
        - name: TANGO_HOST
          value: "{{ $tango_host }}"
        - name: JAVA_OPTS
          value: "-Xmx4G -Xshare:off -XX:+UseG1GC -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5009"
        ports:
        - name: rest
          containerPort: 8080
          protocol: TCP
        resources:
{{ toYaml .Values.tangorest.resources | indent 10 }}
      restartPolicy: Always
{{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}

{{ end }}
