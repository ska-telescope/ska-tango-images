{{- /*
Creates persistent volume claim and a management pod for the data it contains.
It is ONE claim per deviceserver definition not per instance!
These will only be created if the key "deviceserver.volume"
It assumes dynamic persistent volumes.

Parameters are:

deviceserver.volume.name       name of the volume, e.g. "firmware"
deviceserver.volume.mountPath  mount path inside the container, e.g. "/firmware"
deviceserver.volume.size       (optional and set to 250Mi by default)

*/}}
{{ define "ska-tango-util.deviceserver-pvc.tpl" }}

---
{{- if hasKey .deviceserver "volume"}}
{{ $deviceserver_name := tpl (coalesce .name .deviceserver.name | toString) .local }}
{{ $volume_name := .deviceserver.volume.name }}
{{ $volume_path := .deviceserver.volume.mountPath }}
{{ $volume_size := coalesce .deviceserver.volume.storage "250Mi" }}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ $deviceserver_name | toString }}-pvc-{{ .local.Release.Name }}
  namespace: {{ .local.Release.Namespace }}
spec:
  accessModes: 
   - ReadWriteMany
  resources:
    requests:
      storage: {{ $volume_size }}

---
apiVersion: v1
kind: Pod
metadata:
  name: {{$deviceserver_name | toString }}-pvc-admin-{{ .local.Release.Name }}
  namespace: {{ .local.Release.Namespace }}
spec:
  containers:
    - name: volume-admin
      image: alpine:3.12
      command: [ "/bin/sh", "-c", "--" ]
      args: [ "while true; do sleep 30; done;" ]
      volumeMounts:
        - name: {{ $volume_name }}
          mountPath: {{ $volume_path }}
          
  volumes:
    - name: {{ $volume_name }}
      persistentVolumeClaim: 
        claimName: {{ $deviceserver_name | toString }}-pvc-{{ .local.Release.Name }}

{{- end }}

{{ end }} # deviceserver-pvc.tpl