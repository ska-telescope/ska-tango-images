{{ define "tango-util.deviceserver.tpl" }}
# Device Server Service 
# Parameter: deviceserver struct, global.Values.dsconfig struct, project image struct
# giving a dummy Service entry ensures that the single pod is DNS addressable
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .deviceserver.name }}
  namespace: {{ .local.Release.Namespace }}
  labels:
    {{ toYaml .local.Values.global.labels | indent 4 }}
    component: {{ .deviceserver.name }}
    function: {{ .deviceserver.function }}
    domain: {{ .deviceserver.domain }}
    subsystem: {{ .local.Values.subsystem }}
spec:
  selector:
    subsystem: {{ .local.Values.subsystem }}
    component: {{ .deviceserver.name }}
  clusterIP: None
  ports:
  - name: dummy # Actually, no port is needed.
    port: 1234
    targetPort: 1234

---
# Single Pod separate statefulset per Device Server
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .local.Chart.Name }}-{{ .deviceserver.name }}
  namespace: {{ .local.Release.Namespace }}
  labels:
    {{ toYaml .local.Values.global.labels | indent 4 }}
    component: {{ .deviceserver.name }}
    function: {{ .deviceserver.function }}
    domain: {{ .deviceserver.domain }}
    subsystem: {{ .local.Values.subsystem }} 
spec:
  selector:
    matchLabels:
      component: {{ .deviceserver.name }}
      subsystem: {{ .local.Values.subsystem }} 
  serviceName: {{ .local.Chart.Name }}-{{ .deviceserver.name }}
  replicas: 1
  template:
    metadata:
      labels:
        {{ toYaml .local.Values.global.labels | indent 8 }}
        component: {{ .deviceserver.name }}
        function: {{ .deviceserver.function }}
        domain: {{ .deviceserver.domain }}
        subsystem: {{ .local.Values.subsystem }} 
    spec:
      initContainers:
      - name: check-databaseds-ready
        image: {{ .local.Values.global.dsconfig.image.registry }}/{{ .local.Values.global.dsconfig.image.image }}:{{ .local.Values.global.dsconfig.image.tag }}
        imagePullPolicy: {{ .local.Values.global.dsconfig.image.pullPolicy }}
        command:
          - /usr/local/bin/wait-for-it.sh
          - $TANGO_HOST
          - --timeout=60
          - --strict
          - --
          - echo databaseds ready
        env:
        - name: TANGO_HOST
          value: {{ .local.Values.global.tango_host }}
{{ toYaml .local.Values.global.environment_variables | indent 8 }}
{{ if (.deviceserver.depends_on) }}
{{ range $index, $device := .deviceserver.depends_on }}
      - name: check-dependencies-{{ $index }}
        image: {{ .local.Values.global.Values.dsconfig.image.registry }}/{{ .local.Values.global.Values.dsconfig.image.image }}:{{ .local.Values.global.Values.dsconfig.image.tag }}
        imagePullPolicy: {{ .local.Values.global.Values.dsconfig.image.pullPolicy }}
        command:
          - retry
          - --max=10
          - --
          - tango_admin
          - --check-device
          - {{ $device | toString }}
        env:
        - name: TANGO_HOST
          value: {{ .local.Values.global.tango_host }}
{{ toYaml .local.Values.global.environment_variables | indent 8 }}
{{ end }} 
{{ end }} 
      containers:
      - name: device-server
        image: "{{ .image.registry }}/{{ .image.image }}:{{ .image.tag }}"
        imagePullPolicy: {{ .image.pullPolicy }}
        command:
          - sh
        args:
{{ toYaml .deviceserver.args | indent 10 }}
        env:
        - name: TANGO_HOST
          value: {{ .local.Values.global.tango_host }}
{{ toYaml .local.Values.global.environment_variables | indent 8 }}
{{ toYaml .deviceserver.environment_variables | indent 8 }}
        resources:
{{ if .deviceserver.resources }}
{{ toYaml .deviceserver.resources | indent 10 }}
{{ else }}
{{ toYaml .local.Values.resources | indent 10 }}
{{ end }}
{{- with .nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .affinity }}
      affinity:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}

{{ end }}