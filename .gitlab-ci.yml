# Generated by scripts/gen-gitlab-ci.sh
# vim: ft=yaml

image: $SKA_K8S_TOOLS_DOCKER_BUILDER_IMAGE

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  OCI_BUILD_ADDITIONAL_TAGS: $CI_COMMIT_SHORT_SHA
  MINIKUBE: "false"

stages:
- lint
- build
- test
- publish
- scan
- pages
- cleanup_build

check-gitlab:
  stage: lint
  script:
    - make .gitlab-ci.yml
    - if git status --porcelain | grep >/dev/null .gitlab-ci.yml; then echo ".gitlab-ci.yml not up-to-date"; exit 1; fi

# https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#authenticating-to-the-container-registry
before_script:
  - echo $CAR_OCI_REGISTRY_PASSWORD | docker login -u $CAR_OCI_REGISTRY_USERNAME --password-stdin $CAR_OCI_REGISTRY_HOST

.image_builder_template:
  image: $SKA_K8S_TOOLS_DEPLOY_IMAGE
  retry: 2
  stage: build
  rules:
    - if: '$CI_COMMIT_TAG'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH' ## To eliminate duplicate detached MRs and not on merge to master
  tags:
    - k8srunner
  before_script:
    - '[ -f .make/oci.mk ] || exit 1'
    - 'make help | grep oci-build'
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - echo $CAR_OCI_REGISTRY_PASSWORD | docker login -u $CAR_OCI_REGISTRY_USERNAME --password-stdin $CAR_OCI_REGISTRY_HOST
  script:
    - make oci-build-with-deps OCI_IMAGE=${OCI_IMAGE}

# if no build is done, this job does not work
# for the moment we keep it as disabled
.ska-tango-examples-tests-use-trigger:
  variables:
    BUILD_IMAGE: "${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/ska-tango-images-pytango-builder:$CI_COMMIT_SHORT_SHA"
    BASE_IMAGE: "${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/ska-tango-images-pytango-runtime:$CI_COMMIT_SHORT_SHA"
    OCI_BUILD_ADDITIONAL_ARGS: "--no-cache --build-arg BUILD_IMAGE --build-arg BASE_IMAGE "
    SKA_PYTHON_PYTANGO_BUILDER_IMAGE: "${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/ska-tango-images-pytango-builder:$CI_COMMIT_SHORT_SHA"
    PYTANGO_VERSION: "9.3.6"
  trigger:
    project: ska-telescope/ska-tango-examples
    strategy: depend

ska-tango-examples-tests:
  allow_failure: true
  stage: test
  tags:
    - k8srunner
  rules:
    - when: never
  script:
    - |
      VERS=$(make show-version RELEASE_CONTEXT_DIR=images/ska-tango-images-pytango-builder)
      export BUILD_IMAGE="${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/ska-tango-images-pytango-builder:${VERS}"
      VERS=$(make show-version RELEASE_CONTEXT_DIR=images/ska-tango-images-pytango-runtime)
      export BASE_IMAGE="${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/ska-tango-images-pytango-runtime:${VERS}"
      export OCI_BUILD_ADDITIONAL_ARGS="--no-cache --build-arg BUILD_IMAGE --build-arg BASE_IMAGE "
      export PYTANGO_VERSION="$(docker run ${BUILD_IMAGE} pip list | grep pytango | awk '{print $2}')"
      response=$(curl --request POST \
           --form token=$CI_JOB_TOKEN \
           --form ref=master \
           --form "variables[BUILD_IMAGE]=${BUILD_IMAGE}" \
           --form "variables[PYTANGO_VERSION]=${PYTANGO_VERSION}" \
           --form "variables[BASE_IMAGE]=${BASE_IMAGE}" \
           --form "variables[OCI_BUILD_ADDITIONAL_ARGS]=${OCI_BUILD_ADDITIONAL_ARGS}" \
           --form "variables[SKA_PYTHON_PYTANGO_BUILDER_IMAGE]=${BUILD_IMAGE}" \
           "https://gitlab.com/api/v4/projects/9673989/trigger/pipeline")
      echo "Created pipeline for 'ska-tango-examples': $(jq -r '.web_url' <<< "$response")"
      pipeline_id=$(jq -r '.id' <<< "$response")
      pipeline_url="https://gitlab.com/api/v4/projects/9673989/pipelines/${pipeline_id}"
      jobs_url="$pipeline_url/jobs?per_page=100"
      for i in {1..800}
      do
        response=$(curl -s --header "PRIVATE-TOKEN: $GITLAB_TOKEN" "$pipeline_url")
        status=$(jq -r '.status' <<< "$response" || true) 
        if [[ $status == "running" ]]; then
          response=$(curl -s --header "PRIVATE-TOKEN: $GITLAB_TOKEN" "$jobs_url")
          k8steststatus=$(jq -r '.[] | select(.name == "k8s-test") | .status' <<< $response)
          pythonteststatus=$(jq -r '.[] | select(.name == "python-test") | .status' <<< $response)
          if [[ $k8steststatus  == "success" ]] && [[ $pythonteststatus  == "success" ]]; then
            echo "'ska-tango-examples' success."
            exit 0
          elif [[ $k8steststatus  == "failed" ]] || [[ $pythonteststatus  == "failed" ]]; then
            echo "'ska-tango-examples' failed."
            exit 1
          elif [[ $k8steststatus  == "canceled" ]] || [[ $pythonteststatus  == "canceled" ]]; then
            echo "'ska-tango-examples' canceled."
            exit 1
          else
            echo -n '.'
            sleep 5
          fi
        elif [[ $status == "failed" ]]; then
          echo "'ska-tango-examples' failed."
          exit 1
        elif [[ $status == "canceled" ]]; then
          echo "'ska-tango-examples' canceled."
          exit 1
        else
          echo -n '.'
          sleep 5
        fi
      done

# Custom OCI Image publish stage
oci-image-publish: #Executed on a tag for CAR
  stage: publish
  image: $SKA_K8S_TOOLS_DOCKER_BUILDER_IMAGE
  tags:
    - k8srunner
  before_script:
    - '[ -f .make/oci.mk ] || (echo "File oci.mk not included in Makefile; exit 1")'
    - 'make help | grep oci-publish'
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - echo $CAR_OCI_REGISTRY_PASSWORD | docker login -u $CAR_OCI_REGISTRY_USERNAME --password-stdin $CAR_OCI_REGISTRY_HOST
  script:
    - make custom-oci-publish-all
  rules:
    - if: '$CI_COMMIT_TAG'

# Include CI templates
include:
# OCI Images
  # do a custom set of build and publish stages
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/oci-image-lint.gitlab-ci.yml'

  # Raw
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/raw.gitlab-ci.yml'

# Docs pages
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/docs-pages.gitlab-ci.yml'

# .post step finalisers eg: badges
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/finaliser.gitlab-ci.yml'

# changelog release page
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/changelog.gitlab-ci.yml'

  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/oci-image-scan.gitlab-ci.yml'

##### Overide scanning jobs

oci-image-scan:
  before_script:
    - echo "" 
  after_script: []
  script:
    - echo "The default scan job is overwritten in this CI/CD. Please see other jobs in the scan stage"

.container-scanning:
  stage: scan
  tags:
    - k8srunner
  image:
    name: $SKA_TRIVY_IMAGE
    entrypoint: [""]
  rules:
    - if: '$CI_COMMIT_TAG'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH'
  variables:
  allow_failure: true
  before_script:
  - |
    apk add bash make curl
  script:
  - make oci-scan OCI_IMAGE=${OCI_IMAGE} CAR_OCI_REGISTRY_HOST=${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME} RELEASE_CONTEXT_DIR=images/${OCI_IMAGE}
  cache:
    paths:
      - .trivycache/
  artifacts:
    when: always
    reports:
      container_scanning: gl-container-scanning-report.json

oci-tests:
  stage: test
  tags:
    - k8srunner
  before_script:
    pip install -r tests/requirements.txt
  script:
    make oci-tests

scan_tango-admin:
  extends: .container-scanning
  variables:
    OCI_IMAGE: ska-tango-images-tango-admin

build_tango-admin:
  extends: .image_builder_template
  variables:
    OCI_IMAGE: ska-tango-images-tango-admin
  needs:
    - build_tango-base
    - build_tango-cpp

scan_tango-base:
  extends: .container-scanning
  variables:
    OCI_IMAGE: ska-tango-images-tango-base

build_tango-base:
  extends: .image_builder_template
  variables:
    OCI_IMAGE: ska-tango-images-tango-base

scan_tango-cpp:
  extends: .container-scanning
  variables:
    OCI_IMAGE: ska-tango-images-tango-cpp

build_tango-cpp:
  extends: .image_builder_template
  variables:
    OCI_IMAGE: ska-tango-images-tango-cpp
  needs:
    - build_tango-dependencies

scan_tango-databaseds:
  extends: .container-scanning
  variables:
    OCI_IMAGE: ska-tango-images-tango-databaseds

build_tango-databaseds:
  extends: .image_builder_template
  variables:
    OCI_IMAGE: ska-tango-images-tango-databaseds
  needs:
    - build_tango-admin
    - build_tango-cpp

scan_tango-db:
  extends: .container-scanning
  variables:
    OCI_IMAGE: ska-tango-images-tango-db

build_tango-db:
  extends: .image_builder_template
  variables:
    OCI_IMAGE: ska-tango-images-tango-db

scan_tango-dependencies:
  extends: .container-scanning
  variables:
    OCI_IMAGE: ska-tango-images-tango-dependencies

build_tango-dependencies:
  extends: .image_builder_template
  variables:
    OCI_IMAGE: ska-tango-images-tango-dependencies

scan_tango-dsconfig:
  extends: .container-scanning
  variables:
    OCI_IMAGE: ska-tango-images-tango-dsconfig

build_tango-dsconfig:
  extends: .image_builder_template
  variables:
    OCI_IMAGE: ska-tango-images-tango-dsconfig
  needs:
    - build_tango-python

scan_tango-itango:
  extends: .container-scanning
  variables:
    OCI_IMAGE: ska-tango-images-tango-itango

build_tango-itango:
  extends: .image_builder_template
  variables:
    OCI_IMAGE: ska-tango-images-tango-itango
  needs:
    - build_tango-python

scan_tango-java:
  extends: .container-scanning
  variables:
    OCI_IMAGE: ska-tango-images-tango-java

build_tango-java:
  extends: .image_builder_template
  variables:
    OCI_IMAGE: ska-tango-images-tango-java
  needs:
    - build_tango-test

scan_tango-jive:
  extends: .container-scanning
  variables:
    OCI_IMAGE: ska-tango-images-tango-jive

build_tango-jive:
  extends: .image_builder_template
  variables:
    OCI_IMAGE: ska-tango-images-tango-jive
  needs:
    - build_tango-java

scan_tango-pogo:
  extends: .container-scanning
  variables:
    OCI_IMAGE: ska-tango-images-tango-pogo

build_tango-pogo:
  extends: .image_builder_template
  variables:
    OCI_IMAGE: ska-tango-images-tango-pogo
  needs:
    - build_tango-java

scan_tango-python:
  extends: .container-scanning
  variables:
    OCI_IMAGE: ska-tango-images-tango-python

build_tango-python:
  extends: .image_builder_template
  variables:
    OCI_IMAGE: ska-tango-images-tango-python
  needs:
    - build_tango-admin

scan_tango-rest:
  extends: .container-scanning
  variables:
    OCI_IMAGE: ska-tango-images-tango-rest

build_tango-rest:
  extends: .image_builder_template
  variables:
    OCI_IMAGE: ska-tango-images-tango-rest
  needs:
    - build_tango-java

scan_tango-test:
  extends: .container-scanning
  variables:
    OCI_IMAGE: ska-tango-images-tango-test

build_tango-test:
  extends: .image_builder_template
  variables:
    OCI_IMAGE: ska-tango-images-tango-test
  needs:
    - build_tango-admin
    - build_tango-cpp
